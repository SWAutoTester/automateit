<?xml version='1.0'?>
<project name="Automate It! Test Automation Framework" default="jar" basedir=".">
    
  <taskdef resource="testngtasks" classpath="./lib/testng-6.0.1-nobsh-noguice.jar"/>
    
  <!--////////////////////////////////////////////////////-->
  <!--// Identify properties                            //-->
  <!--////////////////////////////////////////////////////-->
  <property name="classes" value="classes"/>
  <property name="conf" value="conf"/>
  <property name="dist" value="dist"/>
  <property name="docs" value="docs"/>
  <property name="api" value="api"/>
  <property name="org" value="org"/>
  <property name="src" value="src"/>
  <property name="lib" value="lib"/>
  <property name="results" value="results"/>
  <property name="html" value="html"/>
  <property name="images" value="images"/>
  <property name="resources" value="resources"/>
  <property name="performance" value="performance"/>
  <property name="screenshots" value="screenshots"/>
  <property name="master_configuration_file" value="automateit.properties"/>
  <property name="report" value="report"/>
  <property name="testng_listeners_full_set" value="org.uncommons.reportng.HTMLReporter,org.automateit.testng.TestNGListener,org.uncommons.reportng.JUnitXMLReporter,org.automateit.testng.SeleniumCommandCaptureListener,org.automateit.testng.SeleniumScreenCaptureListener,org.automateit.testng.GenericScreenCaptureListener,org.automateit.testng.MOVVideoCaptureListener,org.automateit.testng.AVIVideoCaptureListener,org.automateit.testng.ExtentReportTestListener,org.automateit.testng.AlertEventListener"/>
  
  
  <property environment="env" />
  <condition property="gradle.executable" value="${env.GRADLE_HOME}/bin/gradle">
      <os family="mac" />
  </condition>

  <!-- Macro def, gives us an ant 'gradle' task-->
  <macrodef name="gradle">
    <attribute name="task" />
    <sequential>
        <exec executable="${gradle.executable}" dir="." failonerror="true">
            <arg value="@{task}" />
        </exec>
    </sequential>
  </macrodef>
  
  <!--////////////////////////////////////////////////////-->
  <!--// Create necessary directories                   //-->
  <!--////////////////////////////////////////////////////-->
  <target name="mkdirs" depends="clean">
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${docs}"/>
    <mkdir dir="${docs}/${api}"/>
    <mkdir dir="${results}"/>
    <mkdir dir="${report}"/>
    <mkdir dir="${performance}"/>
    <mkdir dir="${screenshots}"/>
    <mkdir dir="${images}"/>
  </target>

  <!--////////////////////////////////////////////////////-->
  <!--// Build the code                                 //-->
  <!--////////////////////////////////////////////////////-->
  <target name="compile" depends="mkdirs">
      <javac debug="true" debuglevel="lines,vars,source" srcdir="${src}" destdir="${classes}">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
          </classpath>
      </javac>
  </target>
  
  <!--////////////////////////////////////////////////////-->
  <!--// Create Java archive (jar) file of the          //-->
  <!--// automated test code                            //-->
  <!--////////////////////////////////////////////////////-->  
  <target name="jar" depends="compile">
      <jar destfile="${dist}/automateit.jar" basedir="${classes}" />  
  </target>
  
  <!--////////////////////////////////////////////////////-->
  <!--// Clean task                                     //-->
  <!--////////////////////////////////////////////////////-->
  <target name="clean" description="Clean all components">
      <delete dir="${classes}/${org}/" />
      <delete dir="${docs}/${api}" />
      <delete dir="${dist}" />
      <delete dir="${performance}" />
      <delete dir="${screenshots}" />
      <delete dir="${results}" />
      <delete dir="${report}" />
  </target>
  
  <!--////////////////////////////////////////////////////-->
  <!--// Create javadocs                                //-->
  <!--////////////////////////////////////////////////////-->
  <target name="javadoc" description="Create API javadoc">
      <javadoc
           destdir="${docs}/${api}"
           author="true"
           version="true"
           use="true"
           windowtitle="AutomateIt! Test Automation Framework API">

           <fileset dir="${src}" defaultexcludes="yes">
                <include name="org/automateit/**"/>
           </fileset>
           <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
          </classpath>
      </javadoc>
   </target>
   
   <target name="example" depends="jar">
      <testng outputdir="results/" groups="example" useDefaultListeners="false" listeners="${testng_listeners_full_set}">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="example_firefox" depends="jar">
      <antcall target="delete_master_configuration_file"/>
      <antcall target="copy_firefox_configuration_file"/>
      <antcall target="example"/>
  </target>
  
  <target name="example_chrome" depends="jar">
      <antcall target="delete_master_configuration_file"/>
      <antcall target="copy_chrome_configuration_file"/>
      <antcall target="example"/>
  </target>
  
  <target name="example_safari" depends="jar">
      <antcall target="delete_master_configuration_file"/>
      <antcall target="copy_safari_configuration_file"/>
      <antcall target="example"/>
  </target>
  
  <target name="example_edge" depends="jar">
      <antcall target="delete_master_configuration_file"/>
      <antcall target="copy_edge_configuration_file"/>
      <antcall target="example"/>
  </target>
  
  <target name="delete_master_configuration_file">
      <delete file="${conf}/${master_configuration_file}"/>
  </target>
  
  <target name="copy_firefox_configuration_file">
      <copy file="${conf}/configuration.properties.firefox.properties" tofile="${conf}/${master_configuration_file}"/>
  </target>
  
  <target name="copy_chrome_configuration_file">
      <copy file="${conf}/configuration.properties.chrome.properties" tofile="${conf}/${master_configuration_file}"/>
  </target>
  
  <target name="copy_edge_configuration_file">
      <copy file="${conf}/configuration.properties.edge.properties" tofile="${conf}/${master_configuration_file}"/>
  </target>
  
  <target name="copy_safari_configuration_file">
      <copy file="${conf}/configuration.properties.safari.properties" tofile="${conf}/${master_configuration_file}"/>
  </target>
  
  <target name="copy_android_configuration_file">
      <copy file="${conf}/configuration.properties.android.properties" tofile="${conf}/${master_configuration_file}"/>
  </target>
  
  <target name="copy_ios_configuration_file">
      <copy file="${conf}/configuration.properties.ios.properties" tofile="${conf}/${master_configuration_file}"/>
  </target>
  
  <target name="copy_android_web_configuration_file">
      <copy file="${conf}/configuration.properties.android.web.properties" tofile="${conf}/${master_configuration_file}"/>
  </target>
  
  <target name="example_read_input_data" depends="jar">
      <testng outputdir="results/" groups="example_read_input_data" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter,org.automateit.event.PrometheusPushGatewayAlertHandler">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example Data Input Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
  </target>
  
  <target name="android" depends="jar">
      <antcall target="delete_master_configuration_file"/>
      <antcall target="copy_android_configuration_file"/>
      <testng outputdir="results/" groups="android" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter,org.automateit.testng.SeleniumCommandCaptureListener,org.automateit.testng.GenericScreenCaptureListener,org.automateit.testng.MobileScreenCaptureListener,org.automateit.testng.MOVVideoCaptureListener,org.automateit.testng.AVIVideoCaptureListener">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example Android Mobile App Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="ios" depends="jar">
      <antcall target="delete_master_configuration_file"/>
      <antcall target="copy_ios_configuration_file"/>
      <testng outputdir="results/" groups="ios" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter,org.automateit.testng.SeleniumCommandCaptureListener,org.automateit.testng.GenericScreenCaptureListener,org.automateit.testng.MobileScreenCaptureListener,org.automateit.testng.MOVVideoCaptureListener,org.automateit.testng.AVIVideoCaptureListener">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example iOS Mobile App Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="android_web" depends="jar">
      <antcall target="delete_master_configuration_file"/>
      <antcall target="copy_android_web_configuration_file"/>
      <testng outputdir="results/" groups="example_mobileweb" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter,org.automateit.testng.SeleniumCommandCaptureListener,org.automateit.testng.GenericScreenCaptureListener,org.automateit.testng.MobileScreenCaptureListener,org.automateit.testng.MOVVideoCaptureListener,org.automateit.testng.AVIVideoCaptureListener">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example Android Mobile Web App Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="copy_screenshots">
      <copy todir="${results}/${html}">
          <fileset dir="${screenshots}"/>
      </copy>
  </target>
  
  <target name="copy_images">
      <copy todir="${results}/${html}">
          <fileset dir="${resources}/${images}"/>
      </copy>
  </target>
  
  <target name="example_texttospeech" depends="jar">
      <testng outputdir="results/" groups="example_texttospeech" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example Text To Speech Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="example_ocr" depends="jar">
      <testng outputdir="results/" groups="example_ocr" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example OCR Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="example_etcd" depends="jar">
      <testng outputdir="results/" groups="example_etcd" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example ETCD Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="example_resource_lock" depends="jar">
      <testng outputdir="results/" groups="example_resource_lock" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example ETCD Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="example_assets" depends="jar">
      <testng outputdir="results/" groups="example_assets" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Example Asset Tests"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="example_sys" depends="jar">
      <testng outputdir="results/" groups="example_sys" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Test Results"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="example_regex" depends="jar">
      <testng outputdir="results/" groups="example_regex" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Test Results"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="cucumber_poc" depends="jar">
      <testng outputdir="results/" groups="cucumber_poc" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Test Results"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>
  
  <target name="cucumber_demo" depends="jar">
      <testng outputdir="results/" groups="cucumber_demo" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.automateit.testng.TestNGListener,org.uncommons.reportng.JUnitXMLReporter,org.automateit.testng.ExtentReportTestListener,org.automateit.testng.SeleniumCommandCaptureListener,org.automateit.testng.SeleniumScreenCaptureListener,org.automateit.testng.GenericScreenCaptureListener,org.automateit.testng.MOVVideoCaptureListener,org.automateit.testng.AVIVideoCaptureListener,org.automateit.testng.ExtentReportTestListener">
          <classpath>
              <fileset dir="${lib}">
                  <include name="**/*.jar"/>
              </fileset>
              <fileset dir="${dist}">
                  <include name="**/*.jar"/>
              </fileset>
	  </classpath>
	  <classfileset dir="${classes}" includes="**/*.class" />
          <sysproperty key="org.uncommons.reportng.title" value="Test Results"/>
          <sysproperty key="org.uncommons.reportng.escape-output" value="false"/>
      </testng>
      <antcall target="copy_images"/>
      <antcall target="copy_screenshots"/>
  </target>

</project>
